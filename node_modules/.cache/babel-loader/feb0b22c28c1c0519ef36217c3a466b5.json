{"ast":null,"code":"var _jsxFileName = \"/home/kibet/Downloads/Student-Reports-master/src/StudentResultBoard/StudentResultBoard.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './StudentResultBoard.css';\n\nclass StudentResultBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Data: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://127.0.0.1:3030/results').then(res => res.json()).then(res => this.setState({\n      Data: res\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, \"Student Results\"), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 18\n      }\n    }, \"StudentResultBoard\")), /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      style: {\n        width: '50%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 49\n      }\n    }, \"Student Name\")), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 26\n      }\n    }, \"Roll Number\")), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 26\n      }\n    }, \"Total Marks\")), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 26\n      }\n    }, \"Status\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }\n    }, this.state.Data.map(item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.rollNumber,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          width: '50%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }\n      }, item.studentName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }\n      }, item.rollNumber), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }\n      }, +item.marks)));\n    })))));\n  }\n\n}\n\nexport default StudentResultBoard; //     // constructor(props) {\n//     //     super(props);\n//     //     this.state = {\n//     //         studentData: []\n//     //     };\n//     //   }\n//     state = {\n//         studentData: [],\n//         error: null\n//     }\n//     componentWillMount() {\n//         // this.setState({ message: \"This is an updated message\" });\n//         var request = require('request');\n// var options = {\n//   'method': 'GET',\n//   'url': 'https://jsonplaceholder.typicode.com/todos/1',\n//   'headers': {\n//   }\n// };\n// request(options, function (error, response) {\n//   if (error) throw new Error(error);\n//   console.log(response.body);\n//   this.setState({ studentData: JSON.stringify(response.data )});\n// });\n//         var axios = require('axios');\n//         var config = {\n//           method: 'get',\n//           url: 'http://127.0.0.1:3030/results',\n//           headers: { \n//             \"Content-Type\": \"text/html; charset=utf-8\",\n//             \"Connection\": \"keep-alive\",\n//             \"Access-Control-Allow-Origin\" : \"*\",\n//             \"Keep-Alive\": \"timeout=5\",\n//           }\n//         };\n//         axios(config)\n//         .then(function (response) {\n//             // this.setState({ studentData: JSON.stringify(response.data)});\n//           console.log(JSON.stringify(response.data));\n//         })\n//         .catch(function (error) {\n//           console.log(error);\n//         });\n//         // axios.get('http://127.0.0.1:3030/results')\n//         //     .then(response => {\n//         //         this.setState({ studentData: response.data })\n//         //     })\n//         //     .catch(error => {\n//         //         this.setState({ error: true })\n//         //     })\n//     }\n//     capitalize = (str, lower = false) =>\n//         (lower ? str.toLowerCase() : str).replace(/(?:^|\\s|[\"'([{])+\\S/g, match => match.toUpperCase());\n//     render() {\n//         let maxMarks = 0;\n//         this.state.studentData.sort((a, b) => a.name.localeCompare(b.name));\n//         let max = Math.max.apply(Math, this.state.studentData.map(item => {\n//             return +item.marks.English + +item.marks.Maths + +item.marks.Science;\n//         }))\n//         let resultTable = <table className=\"table\">\n//             <thead>\n//                 <b>StudentResultBoard</b>\n//             </thead>\n//             <thead>\n//                 <tr>\n//                     <th><i>Student Name</i></th>\n//                     <th><i>Roll Number</i></th>\n//                     <th><i>Total Marks</i></th>\n//                     <th><i>Status</i></th>\n//                 </tr>\n//             </thead>\n//             <tbody>\n//                 {this.state.studentData.map((item) => {\n//                     let totalMarks = +item.marks.English + +item.marks.Maths + +item.marks.Science;\n//                     let status = (totalMarks === max) ? \"Topper\" : ((+item.marks.English < 20 || +item.marks.Science < 20 || +item.marks.Maths < 20) && \"Fail\") || \"Pass\";\n//                     let recordClass = (totalMarks === max) ? \"Topper\" : (status === \"Fail\" ? \"Fail\" : \"Pass\");\n//                     return (\n//                         <tr key={item.rollNumber} className={recordClass}>\n//                             <td>{this.capitalize(item.name)}</td>\n//                             <td>{item.rollNumber}</td>\n//                             <td>{+item.marks.English + +item.marks.Maths + +item.marks.Science}</td>\n//                             <td>{status}</td>\n//                         </tr>\n//                     )\n//                 })}\n//             </tbody>\n//         </table>\n// return (\n//     <div>\n//         <Link to='/register'>Register</Link><br />\n//         <h2>Student Results</h2>\n//         {resultTable}\n//         {this.state.studentData}\n//     </div>\n// )\n//     }\n// }\n// export default StudentResultBoard","map":{"version":3,"sources":["/home/kibet/Downloads/Student-Reports-master/src/StudentResultBoard/StudentResultBoard.js"],"names":["React","Component","Link","StudentResultBoard","constructor","props","state","Data","componentDidMount","fetch","then","res","json","setState","render","width","map","item","rollNumber","studentName","marks"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAO,0BAAP;;AAEA,MAAMC,kBAAN,SAAiCF,SAAjC,CAA2C;AAGvCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAI,KAAKE,QAAL,CAAc;AAAEN,MAAAA,IAAI,EAAEI;AAAR,KAAd,CAFjB;AAGH;;AAGDG,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACD,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADC,eACmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnC,eAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFC,eAGD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADD,CADA,eAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA3B,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAJ,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAJ,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,CAJJ,CADJ,CAJG,eAYH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEO,KAAKT,KAAL,CAAWC,IAAX,CAAgBS,GAAhB,CAAoBC,IAAI,IAAI;AACxB,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAI,QAAA,KAAK,EAAE;AAACH,UAAAA,KAAK,EAAE;AAAR,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BE,IAAI,CAACE,WAAjC,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,IAAI,CAACC,UAAV,CAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,CAACD,IAAI,CAACG,KAAX,CAHA,CADA,CADJ;AAWH,KAZD,CAFP,CAZG,CAHC,CADL,CADJ;AA0CH;;AA5DsC;;AA+D3C,eAAejB,kBAAf,C,CAKA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACR;AACA;AAEA","sourcesContent":["import React, { Component } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport './StudentResultBoard.css';\n\nclass StudentResultBoard extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            Data: []\n        }\n    }\n\n    componentDidMount() {\n        fetch('http://127.0.0.1:3030/results')\n            .then(res => res.json())\n            .then(res => this.setState({ Data: res }))\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                 <div>\n                <Link to='/register'>Register</Link><br />\n                <h2>Student Results</h2>\n                <table>\n                <thead>\n                 <b>StudentResultBoard</b>\n             </thead>\n             <thead>\n                 <tr>\n                     <th style={{width: '50%'}}><i>Student Name</i></th>\n                     <th><i>Roll Number</i></th>\n                     <th><i>Total Marks</i></th>\n                     <th><i>Status</i></th>\n                 </tr>\n             </thead>\n             <tbody>\n             {\n                    this.state.Data.map(item => {\n                        return (\n                            <div>\n                            <tr key={item.rollNumber} >\n                            <td style={{width: '50%'}}>{item.studentName}</td>\n                            <td>{item.rollNumber}</td>\n                            <td>{+item.marks}</td>\n                            \n                        </tr>\n\n                            </div>\n                        )\n                    })\n                }\n                \n             </tbody>\n                </table>\n            \n            </div>\n\n            \n            </React.Fragment>\n        );\n    }\n}\n\nexport default StudentResultBoard\n\n\n\n\n//     // constructor(props) {\n//     //     super(props);\n//     //     this.state = {\n//     //         studentData: []\n//     //     };\n//     //   }\n\n\n//     state = {\n//         studentData: [],\n//         error: null\n//     }\n\n\n//     componentWillMount() {\n       \n//         // this.setState({ message: \"This is an updated message\" });\n//         var request = require('request');\n// var options = {\n//   'method': 'GET',\n//   'url': 'https://jsonplaceholder.typicode.com/todos/1',\n//   'headers': {\n//   }\n// };\n// request(options, function (error, response) {\n//   if (error) throw new Error(error);\n//   console.log(response.body);\n//   this.setState({ studentData: JSON.stringify(response.data )});\n  \n// });\n\n        \n//         var axios = require('axios');\n\n//         var config = {\n//           method: 'get',\n//           url: 'http://127.0.0.1:3030/results',\n//           headers: { \n//             \"Content-Type\": \"text/html; charset=utf-8\",\n//             \"Connection\": \"keep-alive\",\n//             \"Access-Control-Allow-Origin\" : \"*\",\n//             \"Keep-Alive\": \"timeout=5\",\n\n//           }\n//         };\n        \n//         axios(config)\n//         .then(function (response) {\n//             // this.setState({ studentData: JSON.stringify(response.data)});\n//           console.log(JSON.stringify(response.data));\n//         })\n//         .catch(function (error) {\n//           console.log(error);\n//         });\n        \n\n\n\n//         // axios.get('http://127.0.0.1:3030/results')\n//         //     .then(response => {\n//         //         this.setState({ studentData: response.data })\n//         //     })\n//         //     .catch(error => {\n//         //         this.setState({ error: true })\n//         //     })\n//     }\n\n//     capitalize = (str, lower = false) =>\n//         (lower ? str.toLowerCase() : str).replace(/(?:^|\\s|[\"'([{])+\\S/g, match => match.toUpperCase());\n\n//     render() {\n//         let maxMarks = 0;\n//         this.state.studentData.sort((a, b) => a.name.localeCompare(b.name));\n//         let max = Math.max.apply(Math, this.state.studentData.map(item => {\n//             return +item.marks.English + +item.marks.Maths + +item.marks.Science;\n//         }))\n//         let resultTable = <table className=\"table\">\n//             <thead>\n//                 <b>StudentResultBoard</b>\n//             </thead>\n//             <thead>\n//                 <tr>\n//                     <th><i>Student Name</i></th>\n//                     <th><i>Roll Number</i></th>\n//                     <th><i>Total Marks</i></th>\n//                     <th><i>Status</i></th>\n//                 </tr>\n//             </thead>\n//             <tbody>\n//                 {this.state.studentData.map((item) => {\n//                     let totalMarks = +item.marks.English + +item.marks.Maths + +item.marks.Science;\n//                     let status = (totalMarks === max) ? \"Topper\" : ((+item.marks.English < 20 || +item.marks.Science < 20 || +item.marks.Maths < 20) && \"Fail\") || \"Pass\";\n//                     let recordClass = (totalMarks === max) ? \"Topper\" : (status === \"Fail\" ? \"Fail\" : \"Pass\");\n//                     return (\n//                         <tr key={item.rollNumber} className={recordClass}>\n//                             <td>{this.capitalize(item.name)}</td>\n//                             <td>{item.rollNumber}</td>\n//                             <td>{+item.marks.English + +item.marks.Maths + +item.marks.Science}</td>\n//                             <td>{status}</td>\n//                         </tr>\n//                     )\n//                 })}\n//             </tbody>\n//         </table>\n        // return (\n        //     <div>\n        //         <Link to='/register'>Register</Link><br />\n        //         <h2>Student Results</h2>\n        //         {resultTable}\n        //         {this.state.studentData}\n        //     </div>\n        // )\n//     }\n// }\n\n// export default StudentResultBoard"]},"metadata":{},"sourceType":"module"}