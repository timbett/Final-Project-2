{"ast":null,"code":"var _jsxFileName = \"/home/kibet/Downloads/Student-Reports-master/src/StudentResultBoard/StudentResultBoard.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './StudentResultBoard.css';\n\nclass StudentResultBoard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      studentData: [],\n      error: null\n    };\n\n    this.capitalize = (str, lower = false) => (lower ? str.toLowerCase() : str).replace(/(?:^|\\s|[\"'([{])+\\S/g, match => match.toUpperCase());\n  }\n\n  componentWillMount() {\n    this.setState({\n      message: \"This is an updated message\"\n    });\n\n    var request = require('request');\n\n    var options = {\n      'method': 'GET',\n      'url': 'http://127.0.0.1:3030/results',\n      'headers': {}\n    };\n    request(options, function (error, response) {\n      if (error) throw new Error(error);\n      console.log(response.body);\n      this.setState({\n        mess: response.body\n      });\n      console.log('Test');\n    });\n    init(() => {\n      console.info(\"API initialisation successful\");\n      VK.api('users.get', {\n        fields: 'photo_50'\n      }, data => {\n        if (data.response) {\n          that.setState({\n            //this available here and you can do setState\n            FirstName: data.response[0].first_name\n          });\n          console.info(that.state.FirstName);\n        }\n      });\n    }, () => {\n      console.info(\"API initialisation failed\");\n    }, '5.34'); // axios.get('http://127.0.0.1:3030/results')\n    //     .then(response => {\n    //         // this.setState({ studentData: response.data })\n    //     })\n    //     .catch(error => {\n    //         this.setState({ error: true })\n    //     })\n  }\n\n  render() {\n    let maxMarks = 0;\n    this.state.studentData.sort((a, b) => a.name.localeCompare(b.name));\n    let max = Math.max.apply(Math, this.state.studentData.map(item => {\n      return +item.marks.English + +item.marks.Maths + +item.marks.Science;\n    }));\n    let resultTable = /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"StudentResultBoard\")), /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, \"Student Name\")), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, \"Roll Number\")), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, \"Total Marks\")), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, \"Status\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, this.state.studentData.map(item => {\n      let totalMarks = +item.marks.English + +item.marks.Maths + +item.marks.Science;\n      let status = totalMarks === max ? \"Topper\" : (+item.marks.English < 20 || +item.marks.Science < 20 || +item.marks.Maths < 20) && \"Fail\" || \"Pass\";\n      let recordClass = totalMarks === max ? \"Topper\" : status === \"Fail\" ? \"Fail\" : \"Pass\";\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.rollNumber,\n        className: recordClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }\n      }, this.capitalize(item.name)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }\n      }, item.rollNumber), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }\n      }, +item.marks.English + +item.marks.Maths + +item.marks.Science), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }\n      }, status));\n    })));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, \"Student Results\"), resultTable, this.state.messa);\n  }\n\n}\n\nexport default StudentResultBoard;","map":{"version":3,"sources":["/home/kibet/Downloads/Student-Reports-master/src/StudentResultBoard/StudentResultBoard.js"],"names":["React","Component","Link","StudentResultBoard","state","studentData","error","capitalize","str","lower","toLowerCase","replace","match","toUpperCase","componentWillMount","setState","message","request","require","options","response","Error","console","log","body","mess","init","info","VK","api","fields","data","that","FirstName","first_name","render","maxMarks","sort","a","b","name","localeCompare","max","Math","apply","map","item","marks","English","Maths","Science","resultTable","totalMarks","status","recordClass","rollNumber","messa"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport './StudentResultBoard.css';\n\nclass StudentResultBoard extends Component {\n    state = {\n        studentData: [],\n        error: null\n    }\n\n\n    componentWillMount() {\n       \n        this.setState({ message: \"This is an updated message\" });\n        var request = require('request');\nvar options = {\n  'method': 'GET',\n  'url': 'http://127.0.0.1:3030/results',\n  'headers': {\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n  this.setState({ mess: response.body });\n  console.log('Test');\n});\n\n        \ninit(() => {\n    console.info(\"API initialisation successful\");\n    VK.api('users.get',{fields: 'photo_50'},(data) => {\n        if(data.response){\n            that.setState({ //this available here and you can do setState\n                FirstName: data.response[0].first_name\n            });\n            console.info(that.state.FirstName);\n        }\n    });\n}, () => {\n    console.info(\"API initialisation failed\");\n\n}, '5.34');\n\n\n\n        // axios.get('http://127.0.0.1:3030/results')\n        //     .then(response => {\n        //         // this.setState({ studentData: response.data })\n        //     })\n        //     .catch(error => {\n        //         this.setState({ error: true })\n        //     })\n    }\n\n    capitalize = (str, lower = false) =>\n        (lower ? str.toLowerCase() : str).replace(/(?:^|\\s|[\"'([{])+\\S/g, match => match.toUpperCase());\n\n    render() {\n        let maxMarks = 0;\n        this.state.studentData.sort((a, b) => a.name.localeCompare(b.name));\n        let max = Math.max.apply(Math, this.state.studentData.map(item => {\n            return +item.marks.English + +item.marks.Maths + +item.marks.Science;\n        }))\n        let resultTable = <table className=\"table\">\n            <thead>\n                <b>StudentResultBoard</b>\n            </thead>\n            <thead>\n                <tr>\n                    <th><i>Student Name</i></th>\n                    <th><i>Roll Number</i></th>\n                    <th><i>Total Marks</i></th>\n                    <th><i>Status</i></th>\n                </tr>\n            </thead>\n            <tbody>\n                {this.state.studentData.map((item) => {\n                    let totalMarks = +item.marks.English + +item.marks.Maths + +item.marks.Science;\n                    let status = (totalMarks === max) ? \"Topper\" : ((+item.marks.English < 20 || +item.marks.Science < 20 || +item.marks.Maths < 20) && \"Fail\") || \"Pass\";\n                    let recordClass = (totalMarks === max) ? \"Topper\" : (status === \"Fail\" ? \"Fail\" : \"Pass\");\n                    return (\n                        <tr key={item.rollNumber} className={recordClass}>\n                            <td>{this.capitalize(item.name)}</td>\n                            <td>{item.rollNumber}</td>\n                            <td>{+item.marks.English + +item.marks.Maths + +item.marks.Science}</td>\n                            <td>{status}</td>\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n        return (\n            <div>\n                <Link to='/register'>Register</Link><br />\n                <h2>Student Results</h2>\n                {resultTable}\n                {this.state.messa}\n            </div>\n        )\n    }\n}\n\nexport default StudentResultBoard"]},"metadata":{},"sourceType":"module"}