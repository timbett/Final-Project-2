{"ast":null,"code":"var _jsxFileName = \"/home/kibet/Downloads/Student-Reports-master/src/StudentResultBoard/StudentResultBoard.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './StudentResultBoard.css';\n\nclass StudentResultBoard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.capitalize = (str, lower = false) => (lower ? str.toLowerCase() : str).replace(/(?:^|\\s|[\"'([{])+\\S/g, match => match.toUpperCase());\n  }\n\n  // state = {\n  //     studentData: [],\n  //     error: null\n  // }\n  componentWillMount() {\n    //         var myHeaders = new Headers();\n    // myHeaders.append(\"Content-Type\", \"application/json\");\n    // var raw = JSON.stringify({\n    //   \"owner\": \"Peter wasike\",\n    //   \"question\": \"How kamu\",\n    //   \"tm\": \"Pointer\"\n    // });\n    // var requestOptions = {\n    //   method: 'GET',\n    //   headers: myHeaders,\n    //   body: raw,\n    //   redirect: 'follow'\n    // };\n    // var res;\n    // fetch(\"http://127.0.0.1:3030/results\", requestOptions)\n    //   .then(response => response.text())\n    //   .then(result => res = result)\n    //   .catch(error => console.log('error', error));\n    //   this.setState({ message: res });\n    axios.get('http://127.0.0.1:3030/results').then(response => {\n      this.setState({\n        studentData: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  render() {\n    // let maxMarks = 0;\n    // this.state.studentData.sort((a, b) => a.name.localeCompare(b.name));\n    // let max = Math.max.apply(Math, this.state.studentData.map(item => {\n    //     return +item.marks.English + +item.marks.Maths + +item.marks.Science;\n    // }))\n    let resultTable = /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"StudentResultBoard\")), /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, \"Student Name\")), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, \"Roll Number\")), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, \"Total Marks\")), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, \"Status\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, this.state.studentData.map(item => {\n      let totalMarks = +item.marks.English + +item.marks.Maths + +item.marks.Science; // let status = (totalMarks === max) ? \"Topper\" : ((+item.marks.English < 20 || +item.marks.Science < 20 || +item.marks.Maths < 20) && \"Fail\") || \"Pass\";\n      // let recordClass = (totalMarks === max) ? \"Topper\" : (status === \"Fail\" ? \"Fail\" : \"Pass\");\n\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: item.rollNumber // className={recordClass}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }\n      }, this.capitalize(item.name)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }\n      }, item.rollNumber), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }\n      }, +item.marks.English + +item.marks.Maths + +item.marks.Science));\n    })));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"Student Results\"), resultTable, this.state.studentData.dataz);\n  }\n\n}\n\nexport default StudentResultBoard;","map":{"version":3,"sources":["/home/kibet/Downloads/Student-Reports-master/src/StudentResultBoard/StudentResultBoard.js"],"names":["React","Component","axios","Link","StudentResultBoard","capitalize","str","lower","toLowerCase","replace","match","toUpperCase","componentWillMount","get","then","response","setState","studentData","data","catch","error","render","resultTable","state","map","item","totalMarks","marks","English","Maths","Science","rollNumber","name","dataz"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nimport './StudentResultBoard.css';\n\nclass StudentResultBoard extends Component {\n    // state = {\n    //     studentData: [],\n    //     error: null\n    // }\n\n    \n    componentWillMount() {\n        \n\n//         var myHeaders = new Headers();\n// myHeaders.append(\"Content-Type\", \"application/json\");\n\n// var raw = JSON.stringify({\n//   \"owner\": \"Peter wasike\",\n//   \"question\": \"How kamu\",\n//   \"tm\": \"Pointer\"\n// });\n\n// var requestOptions = {\n//   method: 'GET',\n//   headers: myHeaders,\n//   body: raw,\n//   redirect: 'follow'\n// };\n// var res;\n\n// fetch(\"http://127.0.0.1:3030/results\", requestOptions)\n//   .then(response => response.text())\n//   .then(result => res = result)\n//   .catch(error => console.log('error', error));\n//   this.setState({ message: res });\n\n\n        axios.get('http://127.0.0.1:3030/results')\n            .then(response => {\n                this.setState({ studentData: response.data })\n            })\n            .catch(error => {\n                this.setState({ error: true })\n            })\n    }\n\n    capitalize = (str, lower = false) =>\n        (lower ? str.toLowerCase() : str).replace(/(?:^|\\s|[\"'([{])+\\S/g, match => match.toUpperCase());\n\n    render() {\n        // let maxMarks = 0;\n        // this.state.studentData.sort((a, b) => a.name.localeCompare(b.name));\n        // let max = Math.max.apply(Math, this.state.studentData.map(item => {\n        //     return +item.marks.English + +item.marks.Maths + +item.marks.Science;\n        // }))\n        let resultTable = <table className=\"table\">\n            <thead>\n                <b>StudentResultBoard</b>\n            </thead>\n            <thead>\n                <tr>\n                    <th><i>Student Name</i></th>\n                    <th><i>Roll Number</i></th>\n                    <th><i>Total Marks</i></th>\n                    <th><i>Status</i></th>\n                </tr>\n            </thead>\n            <tbody>\n                {this.state.studentData.map((item) => {\n                    let totalMarks = +item.marks.English + +item.marks.Maths + +item.marks.Science;\n                    // let status = (totalMarks === max) ? \"Topper\" : ((+item.marks.English < 20 || +item.marks.Science < 20 || +item.marks.Maths < 20) && \"Fail\") || \"Pass\";\n                    // let recordClass = (totalMarks === max) ? \"Topper\" : (status === \"Fail\" ? \"Fail\" : \"Pass\");\n                    return (\n                        <tr key={item.rollNumber} \n                        // className={recordClass}\n                        >\n                            <td>{this.capitalize(item.name)}</td>\n                            <td>{item.rollNumber}</td>\n                            <td>{+item.marks.English + +item.marks.Maths + +item.marks.Science}</td>\n                            {/* <td>{status}</td> */}\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n        return (\n            <div>\n                <Link to='/register'>Register</Link><br />\n                <h2>Student Results</h2>\n                {resultTable}\n                {this.state.studentData.dataz}\n            </div>\n        )\n    }\n}\n\nexport default StudentResultBoard"]},"metadata":{},"sourceType":"module"}