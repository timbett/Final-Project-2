{"ast":null,"code":"var _jsxFileName = \"/home/kibet/Downloads/Student-Reports-master/src/Form/Form.js\";\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fields: {},\n      formIsValid: false,\n      errorName: null,\n      errorLastName: null,\n      errorPercentage: null,\n      errorClass: null,\n      errorYearOfPassing: null\n    };\n\n    this.validate = () => {\n      let fields = this.state.fields;\n\n      if (!fields[\"name\"]) {\n        this.setState({\n          errorName: \"Name Cannot be empty\",\n          formIsValid: false\n        });\n      } else {\n        if (typeof fields[\"name\"] !== undefined) {\n          if (!fields[\"name\"].match(/^[a-zA-Z]+$/)) {\n            this.setState({\n              errorName: \"Only letters are allowed\",\n              formIsValid: false\n            });\n          } else {\n            this.setState({\n              errorName: null\n            });\n          }\n        }\n      }\n\n      if (!fields[\"lastname\"]) {\n        this.setState({\n          errorLastName: \"Last Name Cannot be empty\",\n          formIsValid: false\n        });\n      } else {\n        if (typeof fields[\"lastname\"] !== \"undefined\") {\n          if (!fields[\"lastname\"].match(/^[a-zA-Z]+$/)) {\n            this.setState({\n              errorLastName: \"Only letters are allowed\",\n              formIsValid: false\n            });\n          } else {\n            this.setState({\n              errorLastName: null\n            });\n          }\n        }\n      }\n\n      if (!fields[\"class\"]) {\n        this.setState({\n          errorClass: \"Class Cannot be empty\",\n          formIsValid: false\n        });\n      } else {\n        if (typeof fields[\"class\"] !== \"undefined\") {\n          if (!fields[\"class\"].match(/^[a-zA-Z0-9]+$/)) {\n            this.setState({\n              errorClass: \"Only Numbers and letters are allowed\",\n              formIsValid: false\n            });\n          } else {\n            this.setState({\n              errorClass: null\n            });\n          }\n        }\n      }\n\n      if (!fields[\"yearofpassing\"]) {\n        this.setState({\n          errorYearOfPassing: \"Year Cannot be empty\",\n          formIsValid: false\n        });\n      } else {\n        if (typeof fields[\"yearofpassing\"] !== \"undefined\") {\n          if (!fields[\"yearofpassing\"].match(/^[0-9]+$/)) {\n            this.setState({\n              errorYearOfPassing: \"Only Numbers are allowed\",\n              formIsValid: false\n            });\n          } else if (this.state.fields[\"yearofpassing\"] > 2017) {\n            this.setState({\n              errorYearOfPassing: \"Year cannot be grater than 2017\",\n              formIsValid: false\n            });\n          } else {\n            this.setState({\n              errorYearOfPassing: null\n            });\n          }\n        }\n      }\n\n      if (!fields[\"percentage\"]) {\n        this.setState({\n          errorPercentage: \"Percentage Cannot be empty\",\n          formIsValid: false\n        });\n      } else {\n        if (typeof fields[\"percentage\"] !== \"undefined\") {\n          if (!fields[\"percentage\"].match(/^[0-9]+$/)) {\n            this.setState({\n              errorPercentage: \"Only Numbers are allowed\",\n              formIsValid: false\n            });\n          } else {\n            this.setState({\n              errorPercentage: null\n            });\n          }\n        }\n      }\n\n      if (!this.state.errorName && !this.state.errorLastName && !this.state.errorClass && !this.state.errorYearOfPassing && !this.state.errorPercentage) {\n        this.setState({\n          formIsValid: true\n        });\n      }\n\n      return this.state.formIsValid;\n    };\n\n    this.contactSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.formIsValid) {\n        alert(\"Form submitted\");\n      } else {\n        alert(\"Form has errors.\");\n      }\n    };\n  }\n\n  handleChange(field, e) {\n    this.validate();\n    let fields = this.state.fields;\n    fields[field] = e.target.value;\n    this.setState({\n      fields\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, \"Results\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 44\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 51\n      }\n    }, \"Student Registration\"), /*#__PURE__*/React.createElement(\"form\", {\n      name: \"studentform\",\n      className: \"studentform\",\n      onSubmit: this.contactSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      refs: \"name\",\n      type: \"text\",\n      size: \"30\",\n      maxLength: \"20\",\n      placeholder: \"Name\",\n      onChange: this.handleChange.bind(this, \"name\"),\n      value: this.state.fields[\"name\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    }, this.state.errorName), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      refs: \"lastname\",\n      type: \"text\",\n      size: \"30\",\n      maxLength: \"20\",\n      placeholder: \"Last Name\",\n      onChange: this.handleChange.bind(this, \"lastname\"),\n      value: this.state.fields[\"lastname\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }, this.state.errorLastName), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      refs: \"class\",\n      type: \"text\",\n      size: \"30\",\n      placeholder: \"Class\",\n      onChange: this.handleChange.bind(this, \"class\"),\n      value: this.state.fields[\"class\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }, this.state.errorClass), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      refs: \"yearofpassing\",\n      type: \"number\",\n      size: \"30\",\n      placeholder: \"Year of passing\",\n      onChange: this.handleChange.bind(this, \"yearofpassing\"),\n      value: this.state.fields[\"yearofpassing\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, this.state.errorYearOfPassing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      refs: \"percentage\",\n      type: \"number\",\n      size: \"30\",\n      placeholder: \"Percentage\",\n      onChange: this.handleChange.bind(this, \"percentage\"),\n      value: this.state.fields[\"percentage\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, this.state.errorPercentage), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: !this.state.formIsValid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/kibet/Downloads/Student-Reports-master/src/Form/Form.js"],"names":["React","Component","Link","Form","state","fields","formIsValid","errorName","errorLastName","errorPercentage","errorClass","errorYearOfPassing","validate","setState","undefined","match","contactSubmit","event","preventDefault","alert","handleChange","field","e","target","value","render","bind","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\n\nclass Form extends Component {\n    state = {\n        fields: {},\n        formIsValid: false,\n        errorName: null,\n        errorLastName: null,\n        errorPercentage: null,\n        errorClass: null,\n        errorYearOfPassing: null\n    }\n\n    validate = () => {\n        let fields = this.state.fields;\n\n        if (!fields[\"name\"]) {\n            this.setState({ errorName: \"Name Cannot be empty\", formIsValid: false });\n        } else {\n            if (typeof fields[\"name\"] !== undefined) {\n                if (!fields[\"name\"].match(/^[a-zA-Z]+$/)) {\n                    this.setState({ errorName: \"Only letters are allowed\", formIsValid: false });\n                }\n                else {\n                    this.setState({ errorName: null });\n                }\n            }\n        }\n\n        if (!fields[\"lastname\"]) {\n            this.setState({ errorLastName: \"Last Name Cannot be empty\", formIsValid: false });\n        } else {\n            if (typeof fields[\"lastname\"] !== \"undefined\") {\n                if (!fields[\"lastname\"].match(/^[a-zA-Z]+$/)) {\n                    this.setState({ errorLastName: \"Only letters are allowed\", formIsValid: false });\n                }\n                else {\n                    this.setState({ errorLastName: null });\n                }\n            }\n        }\n\n        if (!fields[\"class\"]) {\n            this.setState({ errorClass: \"Class Cannot be empty\", formIsValid: false });\n        } else {\n            if (typeof fields[\"class\"] !== \"undefined\") {\n                if (!fields[\"class\"].match(/^[a-zA-Z0-9]+$/)) {\n                    this.setState({ errorClass: \"Only Numbers and letters are allowed\", formIsValid: false });\n                }\n                else {\n                    this.setState({ errorClass: null });\n                }\n            }\n        }\n\n\n        if (!fields[\"yearofpassing\"]) {\n            this.setState({ errorYearOfPassing: \"Year Cannot be empty\", formIsValid: false });\n        }\n        else {\n            if (typeof fields[\"yearofpassing\"] !== \"undefined\") {\n                if (!fields[\"yearofpassing\"].match(/^[0-9]+$/)) {\n                    this.setState({ errorYearOfPassing: \"Only Numbers are allowed\", formIsValid: false });\n                }\n                else if (this.state.fields[\"yearofpassing\"] > 2017) {\n                    this.setState({ errorYearOfPassing: \"Year cannot be grater than 2017\", formIsValid: false });\n                }\n                else {\n                    this.setState({ errorYearOfPassing: null });\n                }\n            }\n        }\n        if (!fields[\"percentage\"]) {\n            this.setState({ errorPercentage: \"Percentage Cannot be empty\", formIsValid: false });\n        }\n        else {\n            if (typeof fields[\"percentage\"] !== \"undefined\") {\n                if (!fields[\"percentage\"].match(/^[0-9]+$/)) {\n                    this.setState({ errorPercentage: \"Only Numbers are allowed\", formIsValid: false });\n                }\n                else {\n                    this.setState({ errorPercentage: null });\n                }\n            }\n        }\n        if (!this.state.errorName && !this.state.errorLastName && !this.state.errorClass && !this.state.errorYearOfPassing && !this.state.errorPercentage) {\n            this.setState({ formIsValid: true });\n        }\n        return this.state.formIsValid;\n    }\n\n    contactSubmit = (event) => {\n        event.preventDefault();\n\n        if (this.state.formIsValid) {\n            alert(\"Form submitted\");\n        } else {\n            alert(\"Form has errors.\")\n        }\n    }\n\n    handleChange(field, e) {\n        this.validate();\n        let fields = this.state.fields;\n        fields[field] = e.target.value;\n        this.setState({ fields });\n    }\n\n    render() {\n        return (\n            <div>\n                <Link to='/'>Results</Link><br /> <h2>Student Registration</h2>\n                <form name=\"studentform\" className=\"studentform\" onSubmit={this.contactSubmit}>\n                    <div className=\"col-md-6\">\n                        <fieldset>\n                            <input refs=\"name\" type=\"text\" size=\"30\" maxLength=\"20\" placeholder=\"Name\" onChange={this.handleChange.bind(this, \"name\")} value={this.state.fields[\"name\"]} />\n                            <span style={{ color: \"red\" }}>{this.state.errorName}</span>\n                            <br />\n                            <input refs=\"lastname\" type=\"text\" size=\"30\" maxLength=\"20\" placeholder=\"Last Name\" onChange={this.handleChange.bind(this, \"lastname\")} value={this.state.fields[\"lastname\"]} />\n                            <span style={{ color: \"red\" }}>{this.state.errorLastName}</span>\n                            <br />\n                            <input refs=\"class\" type=\"text\" size=\"30\" placeholder=\"Class\" onChange={this.handleChange.bind(this, \"class\")} value={this.state.fields[\"class\"]} />\n                            <span style={{ color: \"red\" }}>{this.state.errorClass}</span>\n                            <br />\n                            <input refs=\"yearofpassing\" type=\"number\" size=\"30\" placeholder=\"Year of passing\" onChange={this.handleChange.bind(this, \"yearofpassing\")} value={this.state.fields[\"yearofpassing\"]} />\n                            <span style={{ color: \"red\" }}>{this.state.errorYearOfPassing}</span>\n                            <br />\n                            <input refs=\"percentage\" type=\"number\" size=\"30\" placeholder=\"Percentage\" onChange={this.handleChange.bind(this, \"percentage\")} value={this.state.fields[\"percentage\"]} />\n                            <span style={{ color: \"red\" }}>{this.state.errorPercentage}</span>\n                            <br />\n                        </fieldset>\n                        <fieldset>\n                            <button type=\"submit\" disabled={!this.state.formIsValid}>Submit</button>\n                        </fieldset>\n                    </div>\n\n                </form>\n            </div>\n        )\n    }\n}\n\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}